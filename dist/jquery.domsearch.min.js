/*
 *  DomSearch - v1.0.0
 *  jQuery plugin to facilitate DOM search through a search results JSON endpoint.
 *  https://github.com/EvanHammond/domsearch/
 *
 *  Made by Evan Hammond
 *  Under MIT License
 */
!function(a){function b(b,e){this.element=b,this.options=a.extend({},d,e),this._defaults=d,this._name=c,this.filters=this.options.response.filterFamilies,this.results=this.options.response.searchResults,this.error=this.options.response.error,this.notice=this.options.response.notice,this.paginated={page:1,pages:[],results:[]},this.active=[],this.init()}var c="domsearch",d={results:{},filters:{},resultsVisible:8,filtersVisible:3};b.prototype={init:function(){this.attachListeners(),this.renderFilters(this.filters),this.prerender(this.results).paginate().renderResults(this.paginated)},attachListeners:function(){a("#search-filters").on("change",".search-filter",{plugin:this},function(b){b.data.plugin.filter(a(this))}),a("#search-filters").on("x-filters-rendered",{plugin:this},function(b){var c=b.data.plugin.options.filtersVisible;a(".filter-family").each(function(){a(this).find(".checkbox").slice(c).hide()})}),a("#search-filters").on("click",".filters-show",{plugin:this},function(b){b.data.plugin.toggleFilterVisibility(a(this))}),a("#search-filters").on("click",".filters-toggleall",{plugin:this},function(b){b.data.plugin.toggleFilterAll(a(this))}),a("#search-results").on("click",".search-next",{plugin:this},function(a){a.data.plugin.pageAdvance()}),a("#search-results").on("click",".search-prev",{plugin:this},function(a){a.data.plugin.pageReverse()})},filter:function(b){var c,d,e,f=b.attr("id"),g=b.is(":checked"),h=this.results[e];for(e in this.results)c=h.hasOwnProperty("hiddenBy")&&-1!==a.inArray(f,h.hiddenBy),d=h.hasOwnProperty("filters")&&-1!==a.inArray(f,h.filters),g&&c?(h.hiddenBy.splice(a.inArray(f,h.hiddenBy),1),h.hiddenBy.length<1&&delete h.hiddenBy):d&&c===!1&&(h.hasOwnProperty("hiddenBy")===!1&&(h.hiddenBy=[]),h.hiddenBy.push(f));this.prerender(this.results).paginate().renderResults(this.paginated)},prerender:function(a){var b,c;this.paginated.page=1,this.active=[];for(c in a)b=a[c].hasOwnProperty("hiddenBy"),(b===!1||a[c].hiddenBy.length<=0)&&this.active.push(a[c]);return this},paginate:function(){var a=this.paginated.page*this.options.resultsVisible;return this.paginated.pages=Math.ceil(this.active.length/this.options.resultsVisible),this.paginated.results=this.active.slice(a-this.options.resultsVisible,a),this},renderResults:function(b){var c={error:this.error,notice:this.notice,page:this.paginated.page,pages:this.paginated.totalPages,results:this.results};data=a.extend({},c,b),dust.render("results",data,function(b,c){a("#search-results").html(c).trigger("x-results-rendered")})},renderFilters:function(b){b={families:b},dust.render("filters",b,function(b,c){a("#search-filters").html(c).trigger("x-filters-rendered")})},pageAdvance:function(){this.paginated.page<this.paginated.pages&&this.paginated.page++,this.paginate().renderResults(this.paginated)},pageReverse:function(){this.paginated.page>1&&this.paginated.page--,this.paginate().renderResults(this.paginated)},toggleFilterVisibility:function(a){"more"===a.data("state")?(a.parent().find(".checkbox").slice(this.options.filtersVisible).hide(),a.data("state","less").text("Show more").attr("data-state","")):(a.parent().find(".checkbox").show(),a.data("state","more").text("Show less"))}},a.fn[c]=function(d){return this.each(function(){a.data(this,"plugin_"+c)||a.data(this,"plugin_"+c,new b(this,d))})}}(jQuery,window,document);